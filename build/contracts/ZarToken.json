{
  "contractName": "ZarToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/zaryab/blockchain_begins/all_about_ethereum/quillHash_CODES/bloqueLabs/P_testUpgradable/contracts/tokenERC.sol\":\"ZarToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/zaryab/blockchain_begins/all_about_ethereum/quillHash_CODES/bloqueLabs/P_testUpgradable/contracts/tokenERC.sol\":{\"keccak256\":\"0xdf03f1abc8c6667fe866e5e281246f1f1ef7253d2f242e0a461de2b60d5e1508\",\"urls\":[\"bzz-raw://a03e15d64d4b16c51dba74eff5af43d1d67b6229b64aeae5f316c159fb5d20f3\",\"dweb:/ipfs/QmdoGqib5uTmTPUA3TBJ9SdtfdeMu4KooJMQxwQ8p4qmng\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5\",\"urls\":[\"bzz-raw://a85355cc4f2554f4a8d334336d66b48d616abf1d90ec3d6b602e825c6fe63f0c\",\"dweb:/ipfs/QmTJYtsKJjBy3ShAt4kEjvM6nfVS8ZAFQqE29fG16tUP8d\"]},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0dd1e9b19801e3e7d900fbf4182d81e1afd23ad7be39504e33df6bbcba91d724\",\"urls\":[\"bzz-raw://5e30d594df25d0651c2cd6f85d856e5fc9f3dbae68d017e1da33eb3c7e2f1ecc\",\"dweb:/ipfs/QmPgkV99jZr3Zs9ex8dJ5j22oX4wDuDtMCnXNy67bTwgAB\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0xf99780c0c81783ba62fc758da6192b3313eb676d2b1af0ed1245710dd95e5bad\",\"urls\":[\"bzz-raw://ab83f9aa10685fac3cd8d51de77ef60c6f00c3e8f1b0320d5f3b411bb25b72ca\",\"dweb:/ipfs/QmegTVWrvfa43s8JmMoYUtLQg1ZAuMKurt4sNbkqiXAVMS\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x506dd0718f9ace50588c13848167df5e04ae16abb56341afb10c31ff149bc79b\",\"urls\":[\"bzz-raw://f8f230f6d6889a76ae5a6563c3e0acaee90a8687896188be90fff8d9574c8e13\",\"dweb:/ipfs/QmcdZmHdcbBkbSet3Yx8hceQK4itK8SBrV7G2nasVZGJwH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"urls\":[\"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173\",\"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x73bef0a5dec3efde8183c4858d90f683ed2771656c4329647b4d5b0f89498fd5\",\"urls\":[\"bzz-raw://ef58fce3c601850d4137223f8df56635f7fa3691e42bd6e2e296747f821a2540\",\"dweb:/ipfs/QmSiJPHcY399BPDgimEosXzsW38MSXPTCxqT1ibbF4AdoZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061242e806100206000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100b4578063a457c2d711610083578063a457c2d714610494578063a9059cbb146104fa578063dd62ed3e14610560578063f2fde38b146105d85761011d565b8063715018a6146103b35780638129fc1c146103bd5780638da5cb5b146103c757806395d89b41146104115761011d565b8063313ce567116100f0578063313ce567146102af57806339509351146102d35780635c975abb1461033957806370a082311461035b5761011d565b806306fdde0314610122578063095ea7b3146101a557806318160ddd1461020b57806323b872dd14610229575b600080fd5b61012a61061c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016a57808201518184015260208101905061014f565b50505050905090810190601f1680156101975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f1600480360360408110156101bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106be565b604051808215151515815260200191505060405180910390f35b6102136106dc565b6040518082815260200191505060405180910390f35b6102956004803603606081101561023f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e6565b604051808215151515815260200191505060405180910390f35b6102b76107bf565b604051808260ff1660ff16815260200191505060405180910390f35b61031f600480360360408110156102e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d6565b604051808215151515815260200191505060405180910390f35b610341610889565b604051808215151515815260200191505060405180910390f35b61039d6004803603602081101561037157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108a0565b6040518082815260200191505060405180910390f35b6103bb6108e9565b005b6103c5610a59565b005b6103cf610bf7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610419610c21565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045957808201518184015260208101905061043e565b50505050905090810190601f1680156104865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104e0600480360360408110156104aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cc3565b604051808215151515815260200191505060405180910390f35b6105466004803603604081101561051057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d90565b604051808215151515815260200191505060405180910390f35b6105c26004803603604081101561057657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dae565b6040518082815260200191505060405180910390f35b61061a600480360360208110156105ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e35565b005b606060688054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b45780601f10610689576101008083540402835291602001916106b4565b820191906000526020600020905b81548152906001019060200180831161069757829003601f168201915b5050505050905090565b60006106d26106cb61102a565b8484611032565b6001905092915050565b6000606754905090565b60006106f3848484611229565b6107b4846106ff61102a565b6107af8560405180606001604052806028815260200161233960289139606660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061076561102a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ee9092919063ffffffff16565b611032565b600190509392505050565b6000606a60009054906101000a900460ff16905090565b600061087f6107e361102a565b8461087a85606660006107f461102a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a890919063ffffffff16565b611032565b6001905092915050565b6000609760009054906101000a900460ff16905090565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108f161102a565b73ffffffffffffffffffffffffffffffffffffffff1661090f610bf7565b73ffffffffffffffffffffffffffffffffffffffff1614610998576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff1680610a785750610a77611630565b5b80610a8f57506000809054906101000a900460ff16155b610ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610b34576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b3c611641565b610bb06040518060400160405280600b81526020017f5a6172204e6574776f726b0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5a41520000000000000000000000000000000000000000000000000000000000815250611750565b610bb8611863565b610bd3610bc3610bf7565b69126c478a0e3ea860000061197a565b8015610bf45760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060698054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb95780601f10610c8e57610100808354040283529160200191610cb9565b820191906000526020600020905b815481529060010190602001808311610c9c57829003601f168201915b5050505050905090565b6000610d86610cd061102a565b84610d81856040518060600160405280602581526020016123aa6025913960666000610cfa61102a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ee9092919063ffffffff16565b611032565b6001905092915050565b6000610da4610d9d61102a565b8484611229565b6001905092915050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e3d61102a565b73ffffffffffffffffffffffffffffffffffffffff16610e5b610bf7565b73ffffffffffffffffffffffffffffffffffffffff1614610ee4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061229d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806123866024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561113e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806122c36022913960400191505060405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806123616025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061227a6023913960400191505060405180910390fd5b611340838383611b43565b6113ac816040518060600160405280602681526020016122e560269139606560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ee9092919063ffffffff16565b606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061144181606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a890919063ffffffff16565b606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061159b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611560578082015181840152602081019050611545565b50505050905090810190601f16801561158d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015611626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061163b30611bb1565b15905090565b600060019054906101000a900460ff1680611660575061165f611630565b5b8061167757506000809054906101000a900460ff16155b6116cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561171c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611724611bc4565b61172c611cc3565b801561174d5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061176f575061176e611630565b5b8061178657506000809054906101000a900460ff16155b6117db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561182b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611833611bc4565b61183d8383611e6b565b801561185e5760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff16806118825750611881611630565b5b8061189957506000809054906101000a900460ff16155b6118ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561193e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611946611bc4565b61194e611fb6565b6119566120d0565b80156119775760008060016101000a81548160ff0219169083151502179055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a2960008383611b43565b611a3e816067546115a890919063ffffffff16565b606781905550611a9681606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a890919063ffffffff16565b606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611b4e8383836121cf565b611b56610889565b15611bac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806123cf602a913960400191505060405180910390fd5b505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680611be35750611be2611630565b5b80611bfa57506000809054906101000a900460ff16155b611c4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611c9f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015611cc05760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611ce25750611ce1611630565b5b80611cf957506000809054906101000a900460ff16155b611d4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d9e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000611da861102a565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015611e685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611e8a5750611e89611630565b5b80611ea157506000809054906101000a900460ff16155b611ef6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611f46576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8260689080519060200190611f5c9291906121d4565b508160699080519060200190611f739291906121d4565b506012606a60006101000a81548160ff021916908360ff1602179055508015611fb15760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff1680611fd55750611fd4611630565b5b80611fec57506000809054906101000a900460ff16155b612041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612091576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000609760006101000a81548160ff02191690831515021790555080156120cd5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806120ef57506120ee611630565b5b8061210657506000809054906101000a900460ff16155b61215b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156121ab576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156121cc5760008060016101000a81548160ff0219169083151502179055505b50565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061221557805160ff1916838001178555612243565b82800160010185558215612243579182015b82811115612242578251825591602001919060010190612227565b5b5090506122509190612254565b5090565b61227691905b8082111561227257600081600090555060010161225a565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220c8975665501719596ed21d96abc7b24f6e9227b827c19eaa27f34cbed77b87e264736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100b4578063a457c2d711610083578063a457c2d714610494578063a9059cbb146104fa578063dd62ed3e14610560578063f2fde38b146105d85761011d565b8063715018a6146103b35780638129fc1c146103bd5780638da5cb5b146103c757806395d89b41146104115761011d565b8063313ce567116100f0578063313ce567146102af57806339509351146102d35780635c975abb1461033957806370a082311461035b5761011d565b806306fdde0314610122578063095ea7b3146101a557806318160ddd1461020b57806323b872dd14610229575b600080fd5b61012a61061c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016a57808201518184015260208101905061014f565b50505050905090810190601f1680156101975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f1600480360360408110156101bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106be565b604051808215151515815260200191505060405180910390f35b6102136106dc565b6040518082815260200191505060405180910390f35b6102956004803603606081101561023f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e6565b604051808215151515815260200191505060405180910390f35b6102b76107bf565b604051808260ff1660ff16815260200191505060405180910390f35b61031f600480360360408110156102e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d6565b604051808215151515815260200191505060405180910390f35b610341610889565b604051808215151515815260200191505060405180910390f35b61039d6004803603602081101561037157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108a0565b6040518082815260200191505060405180910390f35b6103bb6108e9565b005b6103c5610a59565b005b6103cf610bf7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610419610c21565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045957808201518184015260208101905061043e565b50505050905090810190601f1680156104865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104e0600480360360408110156104aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cc3565b604051808215151515815260200191505060405180910390f35b6105466004803603604081101561051057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d90565b604051808215151515815260200191505060405180910390f35b6105c26004803603604081101561057657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dae565b6040518082815260200191505060405180910390f35b61061a600480360360208110156105ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e35565b005b606060688054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106b45780601f10610689576101008083540402835291602001916106b4565b820191906000526020600020905b81548152906001019060200180831161069757829003601f168201915b5050505050905090565b60006106d26106cb61102a565b8484611032565b6001905092915050565b6000606754905090565b60006106f3848484611229565b6107b4846106ff61102a565b6107af8560405180606001604052806028815260200161233960289139606660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061076561102a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ee9092919063ffffffff16565b611032565b600190509392505050565b6000606a60009054906101000a900460ff16905090565b600061087f6107e361102a565b8461087a85606660006107f461102a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a890919063ffffffff16565b611032565b6001905092915050565b6000609760009054906101000a900460ff16905090565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108f161102a565b73ffffffffffffffffffffffffffffffffffffffff1661090f610bf7565b73ffffffffffffffffffffffffffffffffffffffff1614610998576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff1680610a785750610a77611630565b5b80610a8f57506000809054906101000a900460ff16155b610ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610b34576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b3c611641565b610bb06040518060400160405280600b81526020017f5a6172204e6574776f726b0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5a41520000000000000000000000000000000000000000000000000000000000815250611750565b610bb8611863565b610bd3610bc3610bf7565b69126c478a0e3ea860000061197a565b8015610bf45760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060698054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb95780601f10610c8e57610100808354040283529160200191610cb9565b820191906000526020600020905b815481529060010190602001808311610c9c57829003601f168201915b5050505050905090565b6000610d86610cd061102a565b84610d81856040518060600160405280602581526020016123aa6025913960666000610cfa61102a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ee9092919063ffffffff16565b611032565b6001905092915050565b6000610da4610d9d61102a565b8484611229565b6001905092915050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e3d61102a565b73ffffffffffffffffffffffffffffffffffffffff16610e5b610bf7565b73ffffffffffffffffffffffffffffffffffffffff1614610ee4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061229d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806123866024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561113e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806122c36022913960400191505060405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806123616025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061227a6023913960400191505060405180910390fd5b611340838383611b43565b6113ac816040518060600160405280602681526020016122e560269139606560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ee9092919063ffffffff16565b606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061144181606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a890919063ffffffff16565b606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061159b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611560578082015181840152602081019050611545565b50505050905090810190601f16801561158d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015611626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061163b30611bb1565b15905090565b600060019054906101000a900460ff1680611660575061165f611630565b5b8061167757506000809054906101000a900460ff16155b6116cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561171c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611724611bc4565b61172c611cc3565b801561174d5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061176f575061176e611630565b5b8061178657506000809054906101000a900460ff16155b6117db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561182b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611833611bc4565b61183d8383611e6b565b801561185e5760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff16806118825750611881611630565b5b8061189957506000809054906101000a900460ff16155b6118ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561193e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611946611bc4565b61194e611fb6565b6119566120d0565b80156119775760008060016101000a81548160ff0219169083151502179055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a2960008383611b43565b611a3e816067546115a890919063ffffffff16565b606781905550611a9681606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115a890919063ffffffff16565b606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611b4e8383836121cf565b611b56610889565b15611bac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806123cf602a913960400191505060405180910390fd5b505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680611be35750611be2611630565b5b80611bfa57506000809054906101000a900460ff16155b611c4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611c9f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015611cc05760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611ce25750611ce1611630565b5b80611cf957506000809054906101000a900460ff16155b611d4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d9e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000611da861102a565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015611e685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611e8a5750611e89611630565b5b80611ea157506000809054906101000a900460ff16155b611ef6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611f46576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8260689080519060200190611f5c9291906121d4565b508160699080519060200190611f739291906121d4565b506012606a60006101000a81548160ff021916908360ff1602179055508015611fb15760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff1680611fd55750611fd4611630565b5b80611fec57506000809054906101000a900460ff16155b612041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612091576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000609760006101000a81548160ff02191690831515021790555080156120cd5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806120ef57506120ee611630565b5b8061210657506000809054906101000a900460ff16155b61215b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061230b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156121ab576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156121cc5760008060016101000a81548160ff0219169083151502179055505b50565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061221557805160ff1916838001178555612243565b82800160010185558215612243579182015b82811115612242578251825591602001919060010190612227565b5b5090506122509190612254565b5090565b61227691905b8082111561227257600081600090555060010161225a565b5090565b9056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220c8975665501719596ed21d96abc7b24f6e9227b827c19eaa27f34cbed77b87e264736f6c63430006020033",
  "sourceMap": "454:251:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:251:1;;;;;;;",
  "deployedSourceMap": "454:251:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:251:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:89:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2517:89:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4593:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4593:166:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3584:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5226:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5226:317:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3435:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5938:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5938:215:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1305:84:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3748:125:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3748:125:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1967:145:2;;;:::i;:::-;;535:166:1;;;:::i;:::-;;1335:85:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2719:93:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2719:93:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6640:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6640:266:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4076:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4076:172:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4306:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4306:149:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2261:240:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2261:240:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;2517:89:6;2562:13;2594:5;2587:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:89;:::o;4593:166::-;4676:4;4692:39;4701:12;:10;:12::i;:::-;4715:7;4724:6;4692:8;:39::i;:::-;4748:4;4741:11;;4593:166;;;;:::o;3584:106::-;3645:7;3671:12;;3664:19;;3584:106;:::o;5226:317::-;5332:4;5348:36;5358:6;5366:9;5377:6;5348:9;:36::i;:::-;5394:121;5403:6;5411:12;:10;:12::i;:::-;5425:89;5463:6;5425:89;;;;;;;;;;;;;;;;;:11;:19;5437:6;5425:19;;;;;;;;;;;;;;;:33;5445:12;:10;:12::i;:::-;5425:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5394:8;:121::i;:::-;5532:4;5525:11;;5226:317;;;;;:::o;3435:89::-;3484:5;3508:9;;;;;;;;;;;3501:16;;3435:89;:::o;5938:215::-;6026:4;6042:83;6051:12;:10;:12::i;:::-;6065:7;6074:50;6113:10;6074:11;:25;6086:12;:10;:12::i;:::-;6074:25;;;;;;;;;;;;;;;:34;6100:7;6074:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;6042:8;:83::i;:::-;6142:4;6135:11;;5938:215;;;;:::o;1305:84:10:-;1352:4;1375:7;;;;;;;;;;;1368:14;;1305:84;:::o;3748:125:6:-;3822:7;3848:9;:18;3858:7;3848:18;;;;;;;;;;;;;;;;3841:25;;3748:125;;;:::o;1967:145:2:-;1558:12;:10;:12::i;:::-;1547:23;;:7;:5;:7::i;:::-;:23;;;1539:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2073:1:::1;2036:40;;2057:6;;;;;;;;;;;2036:40;;;;;;;;;;;;2103:1;2086:6;;:19;;;;;;;;;;;;;;;;;;1967:145::o:0;535:166:1:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;579:16:1::1;:14;:16::i;:::-;605:34;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:34::i;:::-;645:22;:20;:22::i;:::-;671:26;677:7;:5;:7::i;:::-;685:11;671:5;:26::i;:::-;1794:14:4::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;535:166:1;:::o;1335:85:2:-;1381:7;1407:6;;;;;;;;;;;1400:13;;1335:85;:::o;2719:93:6:-;2766:13;2798:7;2791:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2719:93;:::o;6640:266::-;6733:4;6749:129;6758:12;:10;:12::i;:::-;6772:7;6781:96;6820:15;6781:96;;;;;;;;;;;;;;;;;:11;:25;6793:12;:10;:12::i;:::-;6781:25;;;;;;;;;;;;;;;:34;6807:7;6781:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6749:8;:129::i;:::-;6895:4;6888:11;;6640:266;;;;:::o;4076:172::-;4162:4;4178:42;4188:12;:10;:12::i;:::-;4202:9;4213:6;4178:9;:42::i;:::-;4237:4;4230:11;;4076:172;;;;:::o;4306:149::-;4395:7;4421:11;:18;4433:5;4421:18;;;;;;;;;;;;;;;:27;4440:7;4421:27;;;;;;;;;;;;;;;;4414:34;;4306:149;;;;:::o;2261:240:2:-;1558:12;:10;:12::i;:::-;1547:23;;:7;:5;:7::i;:::-;:23;;;1539:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:1:::1;2349:22;;:8;:22;;;;2341:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:8;2429:38;;2450:6;;;;;;;;;;;2429:38;;;;;;;;;;;;2486:8;2477:6;;:17;;;;;;;;;;;;;;;;;;2261:240:::0;:::o;828:104:9:-;881:15;915:10;908:17;;828:104;:::o;9704:340:6:-;9822:1;9805:19;;:5;:19;;;;9797:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9902:1;9883:21;;:7;:21;;;;9875:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9984:6;9954:11;:18;9966:5;9954:18;;;;;;;;;;;;;;;:27;9973:7;9954:27;;;;;;;;;;;;;;;:36;;;;10021:7;10005:32;;10014:5;10005:32;;;10030:6;10005:32;;;;;;;;;;;;;;;;;;9704:340;;;:::o;7380:530::-;7503:1;7485:20;;:6;:20;;;;7477:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7586:1;7565:23;;:9;:23;;;;7557:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:47;7660:6;7668:9;7679:6;7639:20;:47::i;:::-;7717:71;7739:6;7717:71;;;;;;;;;;;;;;;;;:9;:17;7727:6;7717:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7697:9;:17;7707:6;7697:17;;;;;;;;;;;;;;;:91;;;;7821:32;7846:6;7821:9;:20;7831:9;7821:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7798:9;:20;7808:9;7798:20;;;;;;;;;;;;;;;:55;;;;7885:9;7868:35;;7877:6;7868:35;;;7896:6;7868:35;;;;;;;;;;;;;;;;;;7380:530;;;:::o;5443:163:3:-;5529:7;5561:1;5556;:6;;5564:12;5548:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5548:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5598:1;5594;:5;5587:12;;5443:163;;;;;:::o;2701:175::-;2759:7;2778:9;2794:1;2790;:5;2778:17;;2818:1;2813;:6;;2805:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:1;2861:8;;;2701:175;;;;:::o;1952:123:4:-;2000:4;2024:44;2062:4;2024:29;:44::i;:::-;2023:45;2016:52;;1952:123;:::o;935:126:2:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;992:26:2::1;:24;:26::i;:::-;1028;:24;:26::i;:::-;1794:14:4::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;935:126:2;:::o;2090:178:6:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;2187:26:6::1;:24;:26::i;:::-;2223:38;2246:5;2253:7;2223:22;:38::i;:::-;1794:14:4::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;2090:178:6;;;:::o;561:175:5:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;624:26:5::1;:24;:26::i;:::-;660:27;:25;:27::i;:::-;697:32;:30;:32::i;:::-;1794:14:4::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;561:175:5;:::o;8181:370:6:-;8283:1;8264:21;;:7;:21;;;;8256:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8332:49;8361:1;8365:7;8374:6;8332:20;:49::i;:::-;8407:24;8424:6;8407:12;;:16;;:24;;;;:::i;:::-;8392:12;:39;;;;8462:30;8485:6;8462:9;:18;8472:7;8462:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8441:9;:18;8451:7;8441:18;;;;;;;;;;;;;;;:51;;;;8528:7;8507:37;;8524:1;8507:37;;;8537:6;8507:37;;;;;;;;;;;;;;;;;;8181:370;;:::o;956:234:5:-;1064:44;1091:4;1097:2;1101:6;1064:26;:44::i;:::-;1128:8;:6;:8::i;:::-;1127:9;1119:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:234;;;:::o;737:413:8:-;797:4;1000:12;1109:7;1097:20;1089:28;;1142:1;1135:4;:8;1128:15;;;737:413;;;:::o;759:64:9:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;1794:14;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;759:64:9;:::o;1067:192:2:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;1134:17:2::1;1154:12;:10;:12::i;:::-;1134:32;;1185:9;1176:6;;:18;;;;;;;;;;;;;;;;;;1242:9;1209:43;;1238:1;1209:43;;;;;;;;;;;;1778:1:4;1794:14:::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;1067:192:2;:::o;2274:178:6:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;2389:5:6::1;2381;:13;;;;;;;;;;;;:::i;:::-;;2414:7;2404;:17;;;;;;;;;;;;:::i;:::-;;2443:2;2431:9;;:14;;;;;;;;;;;;;;;;;;1794::4::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;2274:178:6;;;:::o;1120:90:10:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;1198:5:10::1;1188:7;;:15;;;;;;;;;;;;;;;;;;1794:14:4::0;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;1120:90:10;:::o;742:70:5:-;1512:13:4;;;;;;;;;;;:33;;;;1529:16;:14;:16::i;:::-;1512:33;:50;;;;1550:12;;;;;;;;;;;1549:13;1512:50;1504:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;;;;;;1646:14;1624:36;;1674:14;1670:98;;;1720:4;1704:13;;:20;;;;;;;;;;;;;;;;;;1753:4;1738:12;;:19;;;;;;;;;;;;;;;;;;1670:98;1794:14;1790:66;;;1840:5;1824:13;;:21;;;;;;;;;;;;;;;;;;1790:66;742:70:5;:::o;11050:92:6:-;;;;:::o;454:251:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.6.2 <0.8.0;\n// SPDX-License-Identifier: MIT\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol\";\n\n\ncontract ZarToken is Initializable,OwnableUpgradeable,ERC20PausableUpgradeable{\n\tfunction initialize() initializer public{\n\t\t__Ownable_init();\n        __ERC20_init('Zar Network', 'ZAR');\t\t\n\t\t__ERC20Pausable_init();\n\t\t_mint(owner(),87000 ether);\n\t}\n\t\n}",
  "sourcePath": "/home/zaryab/blockchain_begins/all_about_ethereum/quillHash_CODES/bloqueLabs/P_testUpgradable/contracts/tokenERC.sol",
  "ast": {
    "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/quillHash_CODES/bloqueLabs/P_testUpgradable/contracts/tokenERC.sol",
    "exportedSymbols": {
      "ZarToken": [
        69
      ]
    },
    "id": 70,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".2",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 70,
        "sourceUnit": 1171,
        "src": "65:78:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 70,
        "sourceUnit": 536,
        "src": "144:74:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 70,
        "sourceUnit": 195,
        "src": "219:75:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 70,
        "sourceUnit": 597,
        "src": "295:69:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 70,
        "sourceUnit": 660,
        "src": "365:86:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 40,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 596,
              "src": "475:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$596",
                "typeString": "contract Initializable"
              }
            },
            "id": 41,
            "nodeType": "InheritanceSpecifier",
            "src": "475:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 42,
              "name": "OwnableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 194,
              "src": "489:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeable_$194",
                "typeString": "contract OwnableUpgradeable"
              }
            },
            "id": 43,
            "nodeType": "InheritanceSpecifier",
            "src": "489:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 44,
              "name": "ERC20PausableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 659,
              "src": "508:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PausableUpgradeable_$659",
                "typeString": "contract ERC20PausableUpgradeable"
              }
            },
            "id": 45,
            "nodeType": "InheritanceSpecifier",
            "src": "508:24:1"
          }
        ],
        "contractDependencies": [
          194,
          596,
          659,
          1170,
          1239,
          1519,
          1623
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 69,
        "linearizedBaseContracts": [
          69,
          659,
          1623,
          1170,
          1239,
          194,
          1519,
          596
        ],
        "name": "ZarToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "575:126:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "579:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "579:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5a6172204e6574776f726b",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "618:13:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4651209a841be09357e89d49ac1b6a1d9098215fd503cadb9616f66751e87214",
                          "typeString": "literal_string \"Zar Network\""
                        },
                        "value": "Zar Network"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5a4152",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "633:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53611f0b3535a2cfc4b8deb57fa961ca36c7b2c272dfe4cb239a29c48e549361",
                          "typeString": "literal_string \"ZAR\""
                        },
                        "value": "ZAR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4651209a841be09357e89d49ac1b6a1d9098215fd503cadb9616f66751e87214",
                          "typeString": "literal_string \"Zar Network\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53611f0b3535a2cfc4b8deb57fa961ca36c7b2c272dfe4cb239a29c48e549361",
                          "typeString": "literal_string \"ZAR\""
                        }
                      ],
                      "id": 53,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "605:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "605:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58,
                      "name": "__ERC20Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "645:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "645:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 62,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "677:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:7:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3837303030",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "685:11:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_87000000000000000000000_by_1",
                          "typeString": "int_const 87000000000000000000000"
                        },
                        "value": "87000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_87000000000000000000000_by_1",
                          "typeString": "int_const 87000000000000000000000"
                        }
                      ],
                      "id": 61,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "671:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "671:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "671:26:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 48,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 47,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 580,
                  "src": "557:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "557:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:2:1"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:1"
            },
            "scope": 69,
            "src": "535:166:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 70,
        "src": "454:251:1"
      }
    ],
    "src": "0:705:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/quillHash_CODES/bloqueLabs/P_testUpgradable/contracts/tokenERC.sol",
      "exportedSymbols": {
        "ZarToken": [
          69
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".2",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 34,
        "name": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "attributes": {
          "SourceUnit": 1171,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "scope": 70,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 35,
        "name": "ImportDirective",
        "src": "65:78:1"
      },
      {
        "attributes": {
          "SourceUnit": 536,
          "absolutePath": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
          "scope": 70,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 36,
        "name": "ImportDirective",
        "src": "144:74:1"
      },
      {
        "attributes": {
          "SourceUnit": 195,
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "scope": 70,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 37,
        "name": "ImportDirective",
        "src": "219:75:1"
      },
      {
        "attributes": {
          "SourceUnit": 597,
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
          "file": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
          "scope": 70,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 38,
        "name": "ImportDirective",
        "src": "295:69:1"
      },
      {
        "attributes": {
          "SourceUnit": 660,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol",
          "scope": 70,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 39,
        "name": "ImportDirective",
        "src": "365:86:1"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            194,
            596,
            659,
            1170,
            1239,
            1519,
            1623
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            69,
            659,
            1623,
            1170,
            1239,
            194,
            1519,
            596
          ],
          "name": "ZarToken",
          "scope": 70
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 596,
                  "type": "contract Initializable"
                },
                "id": 40,
                "name": "UserDefinedTypeName",
                "src": "475:13:1"
              }
            ],
            "id": 41,
            "name": "InheritanceSpecifier",
            "src": "475:13:1"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "OwnableUpgradeable",
                  "referencedDeclaration": 194,
                  "type": "contract OwnableUpgradeable"
                },
                "id": 42,
                "name": "UserDefinedTypeName",
                "src": "489:18:1"
              }
            ],
            "id": 43,
            "name": "InheritanceSpecifier",
            "src": "489:18:1"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20PausableUpgradeable",
                  "referencedDeclaration": 659,
                  "type": "contract ERC20PausableUpgradeable"
                },
                "id": 44,
                "name": "UserDefinedTypeName",
                "src": "508:24:1"
              }
            ],
            "id": 45,
            "name": "InheritanceSpecifier",
            "src": "508:24:1"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "8129fc1c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "overrides": null,
              "scope": 69,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 46,
                "name": "ParameterList",
                "src": "554:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 49,
                "name": "ParameterList",
                "src": "575:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 580,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 47,
                    "name": "Identifier",
                    "src": "557:11:1"
                  }
                ],
                "id": 48,
                "name": "ModifierInvocation",
                "src": "557:11:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 97,
                              "type": "function ()",
                              "value": "__Ownable_init"
                            },
                            "id": 50,
                            "name": "Identifier",
                            "src": "579:14:1"
                          }
                        ],
                        "id": 51,
                        "name": "FunctionCall",
                        "src": "579:16:1"
                      }
                    ],
                    "id": 52,
                    "name": "ExpressionStatement",
                    "src": "579:16:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_4651209a841be09357e89d49ac1b6a1d9098215fd503cadb9616f66751e87214",
                                  "typeString": "literal_string \"Zar Network\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_53611f0b3535a2cfc4b8deb57fa961ca36c7b2c272dfe4cb239a29c48e549361",
                                  "typeString": "literal_string \"ZAR\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 710,
                              "type": "function (string memory,string memory)",
                              "value": "__ERC20_init"
                            },
                            "id": 53,
                            "name": "Identifier",
                            "src": "605:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5a6172204e6574776f726b",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Zar Network\"",
                              "value": "Zar Network"
                            },
                            "id": 54,
                            "name": "Literal",
                            "src": "618:13:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5a4152",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"ZAR\"",
                              "value": "ZAR"
                            },
                            "id": 55,
                            "name": "Literal",
                            "src": "633:5:1"
                          }
                        ],
                        "id": 56,
                        "name": "FunctionCall",
                        "src": "605:34:1"
                      }
                    ],
                    "id": 57,
                    "name": "ExpressionStatement",
                    "src": "605:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 622,
                              "type": "function ()",
                              "value": "__ERC20Pausable_init"
                            },
                            "id": 58,
                            "name": "Identifier",
                            "src": "645:20:1"
                          }
                        ],
                        "id": 59,
                        "name": "FunctionCall",
                        "src": "645:22:1"
                      }
                    ],
                    "id": 60,
                    "name": "ExpressionStatement",
                    "src": "645:22:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_87000000000000000000000_by_1",
                                  "typeString": "int_const 87000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1046,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 61,
                            "name": "Identifier",
                            "src": "671:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 128,
                                  "type": "function () view returns (address)",
                                  "value": "owner"
                                },
                                "id": 62,
                                "name": "Identifier",
                                "src": "677:5:1"
                              }
                            ],
                            "id": 63,
                            "name": "FunctionCall",
                            "src": "677:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3837303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": "ether",
                              "token": "number",
                              "type": "int_const 87000000000000000000000",
                              "value": "87000"
                            },
                            "id": 64,
                            "name": "Literal",
                            "src": "685:11:1"
                          }
                        ],
                        "id": 65,
                        "name": "FunctionCall",
                        "src": "671:26:1"
                      }
                    ],
                    "id": 66,
                    "name": "ExpressionStatement",
                    "src": "671:26:1"
                  }
                ],
                "id": 67,
                "name": "Block",
                "src": "575:126:1"
              }
            ],
            "id": 68,
            "name": "FunctionDefinition",
            "src": "535:166:1"
          }
        ],
        "id": 69,
        "name": "ContractDefinition",
        "src": "454:251:1"
      }
    ],
    "id": 70,
    "name": "SourceUnit",
    "src": "0:705:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-20T07:30:35.942Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}